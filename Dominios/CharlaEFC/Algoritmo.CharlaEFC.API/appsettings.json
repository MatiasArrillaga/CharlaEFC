{
  "UseInMemoryDatabase": false,
  "ConnectionStrings": {
  },
  "AllowedHosts": "*",
  /* Configuración de la política de CORS */
  "CORS": {
    /* 
      Lista separada por comas de los orígenes permitidos, deben expresarse en su forma completa, ejemplo, http://localhost, https://algoritmo.com.ar 
      Orígen es la dirección de la aplicación cliente que invoca la API, no la dirección donde la API se encuentra.
      Para expresar todos los orígenes indicar *
    */
    "AllowedOrigins": "http://10.1.85.92",
    /* 
      Lista separada por comas de los métodos HTTP permitidos, aplican para todos los orígenes.
      Para expresar todos los métodos indicar *
    */
    "AllowedMethods": "POST"
  },
  /* 
    Atención: Esta configuración para splitting de archivos sólo funciona con Serilog.Filter.Expressions (deprecado).
    Si se utiliza Serilog.Expressions NO funciona.
    TODO: Adaptar a Serilog.Expressions.
  */
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "System.Net.Http.HttpClient": "Warning"
      }
    },
    "WriteTo": [
      { "Name": "Console" },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@Level = 'Error' or @Level = 'Fatal' or @Level = 'Warning'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "./logs/error/log-ERROR_.log",
                  "outputTemplate": "{Timestamp:o} [Thread:{ThreadId}] [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7,
                  "shared": "true"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@Level = 'Information'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "./logs/info/log-INFO_.log",
                  "outputTemplate": "{Timestamp:o} [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7,
                  "shared": "true"
                }
              }
            ]
          }
        }
      },
      /*
        Este logger es para efectos del test, caso contrario no guarda registro de este nivel cuando se ejecuta por xUnit
      */
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@Level = 'Debug'"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "./logs/debug/log-DEBUG_.log",
                  "outputTemplate": "{Timestamp:o} [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7,
                  "shared": "true"
                }
              }
            ]
          }
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithThreadName" ],
    "Properties": {
      "Application": "CharlaEFC.API"
    }
  },
  "EntityManager": {
    /* Determina si las colecciones se acceden de forma directa (mediante métodos nativos) o si por métodos utilitarios definidos por el usuario. */
    "DirectAccessToCollections": false
  }
}
